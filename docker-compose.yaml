volumes:
    postgres-data:
        external: true
services:
    postgres:
        build:
            context: ./relational-data
            dockerfile: ./Dockerfile.dev
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            POSTGRES_MULTIPLE_DATABASES: accounts, monolith
            POSTGRES_PASSWORD: test-databases
        ports:
            - 15432:5432
    monolith:
        build:
            context: ./monolith/api
            dockerfile: ./Dockerfile.dev
        environment:
            DATABASE_URL: "postgres://monolith:password@postgres:5432/monolith"
            WAIT_HOSTS: postgres:5432 
            WAIT_TIMEOUT: 180
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
            AWS_S3_CUSTOM_DOMAIN: ${AWS_S3_CUSTOM_DOMAIN}
            AWS_LOCATION: ${AWS_LOCATION}
            STATICFILES_STORAGE: ${STATICFILES_STORAGE}
            STATIC_URL: ${STATIC_URL}
            DEFAULT_FILE_STORAGE: ${DEFAULT_FILE_STORAGE}
            #DJWTO_SIGNING_KEY: ${DJWTO_SIGNING_KEY}
            AWS_Cache: ${AWS_Cache}
        ports:
            - "8000:8000"
        volumes:
            - ./monolith/api:/app
        depends_on:
            - postgres
    ghi:
        image: node:lts-bullseye
        command: /bin/bash run.sh
        working_dir: /app
        volumes:
            - ./ghi:/app
        ports:
            - "3000:3000"
        environment:
            HOST_OS: win
            NODE_ENV: development
            HOST: "0.0.0.0"
            REACT_APP_DJANGO_SERVICE: http://localhost:8080
    account-api:
        build:
            context: ./accounts_microservice
            dockerfile: ./Dockerfile.dev
        ports:
            - "8100:8000"
        volumes:
            - ./accounts_microservice:/app
        depends_on:
            - postgres
        environment:
            DATABASE_URL: postgresql://accounts:password@postgres:5432/accounts
            WAIT_HOSTS: postgres:5432
            WAIT_TIMEOUT: 240
            AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
            AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
            AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}
            AWS_S3_CUSTOM_DOMAIN: ${AWS_S3_CUSTOM_DOMAIN}
            AWS_LOCATION: ${AWS_LOCATION}
            STATICFILES_STORAGE: ${STATICFILES_STORAGE}
            STATIC_URL: ${STATIC_URL}
            DEFAULT_FILE_STORAGE: ${DEFAULT_FILE_STORAGE}
            AWS_Cache: ${AWS_Cache}
    puppylove-poller:
        build:
            context: ./monolith/poll
            dockerfile: ./Dockerfile.dev
        volumes:
            - ./monolith/poll:/app
            - ./monolith/poll/puppylove:/app/puppylove
            - ./monolith/poll/puppylove_rest:/app/puppylove_rest
        depends_on:
            - postgres
            - monolith
        environment:
            DATABASE_URL: postgresql://monolith:password@postgres:5432/monolith
            WAIT_HOSTS: postgres:5432,monolith:8000
            WAIT_TIMEOUT: 240